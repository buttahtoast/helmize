'[Reference]: Manifest Snapshot':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        env: test
        location: east
      name: frontend
    spec:
      minReadySeconds: 3
      progressDeadlineSeconds: 120
      revisionHistoryLimit: 5
      selector:
        matchLabels:
          app: frontend
      strategy:
        rollingUpdate:
          maxUnavailable: 0
        type: RollingUpdate
      template:
        metadata:
          annotations:
            prometheus.io/port: "9797"
            prometheus.io/scrape: "true"
          labels:
            app: frontend
        spec:
          containers:
          - command:
            - ./podinfo
            - --port=9898
            - --port-metrics=9797
            - --level=info
            - --backend-url=http://backend:9898/echo
            - --cache-server=cache:6379
            - --level=debug
            env:
            - name: PODINFO_UI_COLOR
              value: '#FAB418'
            image: ghcr.io/stefanprodan/podinfo:6.0.3
            imagePullPolicy: IfNotPresent
            livenessProbe:
              exec:
                command:
                - podcli
                - check
                - http
                - localhost:9898/healthz
              initialDelaySeconds: 5
              timeoutSeconds: 5
            name: frontend
            ports:
            - containerPort: 20000
              name: grpc
              protocol: TCP
            - containerPort: 9898
              name: http
              protocol: TCP
            - containerPort: 9797
              name: http-metrics
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - podcli
                - check
                - http
                - localhost:9898/readyz
              initialDelaySeconds: 5
              timeoutSeconds: 5
            resources:
              limits:
                cpu: 1000m
                memory: 128Mi
              requests:
                cpu: 100m
                memory: 32Mi
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      name: frontend
    spec:
      ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: http
      selector:
        app: frontend
      type: ClusterIP
  3: |
    apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    metadata:
      name: frontend
    spec:
      maxReplicas: 4
      metrics:
      - resource:
          name: cpu
          target:
            averageUtilization: 99
            type: Utilization
        type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: frontend-test
  4: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
      name: frontend
    spec:
      ingressClassName: company-domain
      rules:
      - http:
          paths:
          - backend:
              service:
                name: frontend
                port:
                  number: 80
            host: frontend.test.east.company.com
            path: /
            pathType: Prefix
      tls:
      - hosts:
        - frontend.test.east.company.com
        secretName: frontend-tls
'[Reference]: Summary Snapshot':
  1: |
    conditions:
    - config:
        any: true
        key_types:
        - string
        - slice
        name: base
        path: /base/
      data:
        ingress_class: company-domain
        ingress_name: frontend.test.east.company.com
      errors: []
      keys:
      - /
      name: base
      paths:
      - structure/base/
      root_path: /base/
      value: {}
    - config:
        any: false
        default: test
        filter:
        - test
        - prod
        key: env
        key_types:
        - string
        - slice
        name: environment
        path: env/
        reverse_filter: true
      data:
        ingress_class: company-domain
        ingress_name: frontend.test.east.company.com
      errors: []
      keys:
      - test
      name: environment
      paths:
      - structure/env/test/
      root_path: env/
      value: test
    - config:
        any: false
        default: east
        key: location
        key_types:
        - string
        - slice
        name: location
      data:
        ingress_class: company-domain
        ingress_name: frontend.test.east.company.com
      errors: []
      keys:
      - east
      name: location
      paths:
      - structure/location/east/
      root_path: location
      value: east
    - config:
        any: true
        data:
          ingress_class: company-domain
        key_types:
        - string
        - slice
        name: expose
        tpls:
        - tpls/ingress.tpl
      data:
        ingress_class: company-domain
        ingress_name: frontend.test.east.company.com
      errors: []
      keys:
      - /
      name: expose
      paths:
      - structure/expose/
      root_path: expose
      value: {}
    errors: []
    paths:
    - config: null
      data:
        ingress_class: company-domain
        ingress_name: frontend.test.east.company.com
      paths:
      - structure/base/
      renderers: null
      value: {}
    - config: null
      data:
        ingress_class: company-domain
        ingress_name: frontend.test.east.company.com
      paths:
      - structure/env/test/
      renderers: null
      value: test
    - config: null
      data:
        ingress_class: company-domain
        ingress_name: frontend.test.east.company.com
      paths:
      - structure/location/east/
      renderers: null
      value: east
    - config: null
      data:
        ingress_class: company-domain
        ingress_name: frontend.test.east.company.com
      paths:
      - structure/expose/
      renderers: null
      value: {}
    wagons:
    - checksum: f1fc3b2bc79e44aa79c8170f6b69f509f67a2eaf88482d754675bee5b704150f
      content:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            env: test
            location: east
          name: frontend
        spec:
          minReadySeconds: 3
          progressDeadlineSeconds: 120
          revisionHistoryLimit: 5
          selector:
            matchLabels:
              app: frontend
          strategy:
            rollingUpdate:
              maxUnavailable: 0
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "9797"
                prometheus.io/scrape: "true"
              labels:
                app: frontend
            spec:
              containers:
              - command:
                - ./podinfo
                - --port=9898
                - --port-metrics=9797
                - --level=info
                - --backend-url=http://backend:9898/echo
                - --cache-server=cache:6379
                - --level=debug
                env:
                - name: PODINFO_UI_COLOR
                  value: '#FAB418'
                image: ghcr.io/stefanprodan/podinfo:6.0.3
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  exec:
                    command:
                    - podcli
                    - check
                    - http
                    - localhost:9898/healthz
                  initialDelaySeconds: 5
                  timeoutSeconds: 5
                name: frontend
                ports:
                - containerPort: 20000
                  name: grpc
                  protocol: TCP
                - containerPort: 9898
                  name: http
                  protocol: TCP
                - containerPort: 9797
                  name: http-metrics
                  protocol: TCP
                readinessProbe:
                  exec:
                    command:
                    - podcli
                    - check
                    - http
                    - localhost:9898/readyz
                  initialDelaySeconds: 5
                  timeoutSeconds: 5
                resources:
                  limits:
                    cpu: 1000m
                    memory: 128Mi
                  requests:
                    cpu: 100m
                    memory: 32Mi
      debug: []
      errors: []
      files:
      - _order: 0
        config:
          fork: false
          no_match: append
          pattern: false
          render: true
          subpath: true
        data:
          ingress_class: company-domain
          ingress_name: frontend.test.east.company.com
        file: structure/base/podinfo/deploy.yaml
        ids:
        - deployment-frontend.yaml
        path: structure/base/
        renderers: []
        value: {}
      - _order: 2
        config:
          fork: false
          no_match: append
          pattern: false
          render: true
          subpath: true
        data:
          ingress_class: company-domain
          ingress_name: frontend.test.east.company.com
        file: structure/env/test/podinfo/deploy.yaml
        ids:
        - deployment-frontend.yaml
        path: structure/env/test/
        renderers: []
        value: test
      - _order: 4
        config:
          fork: false
          no_match: append
          pattern: false
          render: true
          subpath: true
        data:
          ingress_class: company-domain
          ingress_name: frontend.test.east.company.com
        file: structure/location/east/podinfo/deploy.yaml
        ids:
        - deployment-frontend.yaml
        path: structure/location/east/
        renderers: []
        value: east
      id:
      - deployment-frontend.yaml
      render: true
      renderers: []
      subpath: podinfo
    - checksum: 08b06c48a587e3fe6179875f70331bb97562a6e584dcb32807ce9eac7572fc8d
      content:
        apiVersion: v1
        kind: Service
        metadata:
          name: frontend
        spec:
          ports:
          - name: http
            port: 80
            protocol: TCP
            targetPort: http
          selector:
            app: frontend
          type: ClusterIP
      debug: []
      errors: []
      files:
      - _order: 1
        config:
          fork: false
          no_match: append
          pattern: false
          render: true
          subpath: true
        data:
          ingress_class: company-domain
          ingress_name: frontend.test.east.company.com
        file: structure/base/podinfo/service.yaml
        ids:
        - service-frontend.yaml
        path: structure/base/
        renderers: []
        value: {}
      id:
      - service-frontend.yaml
      render: true
      renderers: []
      subpath: podinfo
    - checksum: b3e231fd6bc48aa8e1c94208952372b01cec1f7afb7b756c386cd38d007bb976
      content:
        apiVersion: autoscaling/v2beta2
        kind: HorizontalPodAutoscaler
        metadata:
          name: frontend
        spec:
          maxReplicas: 4
          metrics:
          - resource:
              name: cpu
              target:
                averageUtilization: 99
                type: Utilization
            type: Resource
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: frontend-test
      debug: []
      errors: []
      files:
      - _order: 3
        config:
          fork: false
          no_match: append
          pattern: false
          render: true
          subpath: true
        data:
          ingress_class: company-domain
          ingress_name: frontend.test.east.company.com
        file: structure/env/test/podinfo/hpa.yaml
        ids:
        - horizontalpodautoscaler-frontend.yaml
        path: structure/env/test/
        renderers: []
        value: test
      id:
      - horizontalpodautoscaler-frontend.yaml
      render: true
      renderers: []
      subpath: podinfo
    - checksum: 0a7f494f88765c2177e7000566cb57610bd4259c801035dd7a5bf44fdd0545b6
      content:
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /
          name: frontend
        spec:
          ingressClassName: company-domain
          rules:
          - http:
              paths:
              - backend:
                  service:
                    name: frontend
                    port:
                      number: 80
                host: frontend.test.east.company.com
                path: /
                pathType: Prefix
          tls:
          - hosts:
            - frontend.test.east.company.com
            secretName: frontend-tls
      debug: []
      errors: []
      files:
      - _order: 5
        config:
          fork: false
          no_match: append
          pattern: false
          render: true
          subpath: true
        data:
          ingress_class: company-domain
          ingress_name: frontend.test.east.company.com
        file: structure/expose/ingress.tpl
        ids:
        - ingress-frontend.yaml
        path: structure/expose/
        renderers: []
        value: {}
      id:
      - ingress-frontend.yaml
      render: true
      renderers: []
      subpath: .
