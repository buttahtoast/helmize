<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on Helmize</title><link>http://helmize.dev/getting-started/</link><description>Recent content in Getting Started on Helmize</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://helmize.dev/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Concept</title><link>http://helmize.dev/getting-started/concept/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://helmize.dev/getting-started/concept/</guid><description>Helmize is included as library chart. It just has all the function it needs to render the structure you give it and then returns the resulting contents. So it&amp;rsquo;s basically just a render engine.
In the below image we have the Releases (which are effecitively values which install your helm chart). In your helm chart you see different yamls organized in a structure which depends on input conditions eg. locations. Your chart includes a configuration filewhich defines these conditions and allows you to map it two values.</description></item><item><title>Quickstart</title><link>http://helmize.dev/getting-started/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://helmize.dev/getting-started/quickstart/</guid><description>If you encounter any problems during the quickstart make sure to use the debug options. They help to understand what&amp;rsquo;s going on and what might be the problem. First we create a new helm chart which is going to contain the entire deployment structure for helmize. We can simply do that with the following comment (In this case I will call the new chart reference, chose the name you would like):</description></item></channel></rss>